{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/Desktop/mapa-social-sin-claves/mapa-social/src/componentes/Contactos.js\";\nimport React, { Component } from 'react';\nimport { getToken, apiPath } from './funciones';\n\nclass Contactos extends Component {\n  constructor() {\n    super();\n\n    this._handleKeyDown = e => {\n      if (e.key === 'Enter') {\n        this.getPerfilSugerido();\n      }\n    };\n\n    this.state = {\n      buscador: '',\n      nuevoContacto: false,\n      perfilSugerido: []\n    };\n    this.setBuscador = this.setBuscador.bind(this);\n    this.enviarSolicitudContacto = this.enviarSolicitudContacto.bind(this);\n  }\n\n  setBuscador(event) {\n    this.setState({\n      buscador: event.target.value,\n      nuevoContacto: false\n    });\n  }\n\n  buscarContactos(contactos) {\n    let bus = this.state.buscador;\n\n    if (bus !== '' && contactos.length > 0) {\n      let contactosFiltrados = contactos.filter(contacto => {\n        return this.filtrarContactos(contacto.nombre) >= 0 || this.filtrarContactos(contacto.email) >= 0;\n      });\n      return contactosFiltrados;\n    } else {\n      return contactos;\n    }\n  }\n\n  filtrarContactos(bus) {\n    if (typeof bus !== \"undefined\") {\n      return bus.toLowerCase().search(this.state.buscador.toLowerCase());\n    } else {\n      return -1;\n    }\n  }\n\n  renderContactos() {\n    let contactos = this.props.contactos;\n    let nuevoContacto = this.state.nuevoContacto;\n    contactos = this.buscarContactos(contactos);\n\n    if (contactos.length > 0) {\n      return React.createElement(\"ul\", {\n        className: \"simple-user-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.recorrerContactos(contactos));\n    } else if (nuevoContacto === true) {\n      //nuevo contacto\n      let c = this.state.perfilSugerido;\n      return React.createElement(\"ul\", {\n        className: \"simple-user-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: c.imagen,\n        alt: c.nombre,\n        className: \"img-circle\",\n        style: {\n          width: '10%',\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, c.nombre, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, c.email, \" \")), React.createElement(\"hr\", {\n        className: \"dotted short\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"text-uppercase text-muted\",\n        href: true,\n        onClick: this.enviarSolicitudContacto.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Agregar contacto\")));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Puedes agregar contactos buscando por correo\");\n    }\n  }\n\n  validarEmail(valor) {\n    // eslint-disable-next-line no-useless-escape\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(valor).toLowerCase());\n  }\n\n  recorrerContactos(contactos) {\n    return contactos.map(c => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: c.imagen,\n        alt: c.nombre,\n        className: \"img-circle\",\n        style: {\n          width: '10%',\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, c.nombre, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, c.email, \" \")), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fa fa-trash-o\",\n        style: {\n          'color': 'red'\n        },\n        \"data-email\": c.email,\n        \"data-respuesta\": true,\n        onClick: this.eliminarContacto.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Eliminar\")), React.createElement(\"hr\", {\n        className: \"dotted short\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    });\n  }\n\n  getPerfilSugerido() {\n    let email = this.state.buscador;\n\n    if (this.validarEmail(email) === true) {\n      let url = new URL(apiPath() + '/contactos/perfil-sugerido');\n      const params = {\n        bus: email\n      };\n      Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n      const dataRequest = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': getToken()\n        }\n      };\n      fetch(url, dataRequest).then(response => response.json()).then(data => this.setPerfilSugerido(data));\n    }\n  }\n\n  setPerfilSugerido(data) {\n    if (data !== null && data.valido !== false) {\n      this.setState({\n        perfilSugerido: data,\n        nuevoContacto: true\n      });\n    }\n  }\n\n  enviarSolicitudContacto() {\n    let url = apiPath() + '/contactos/solicitud';\n    let email = this.state.buscador;\n    fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': getToken()\n      },\n      body: JSON.stringify({\n        receptor: email\n      })\n    }).then(res => res.json()).then(data => this.comprobarSolicitud(data));\n  }\n\n  comprobarSolicitud(data) {\n    if (data !== \"undefined\" && data !== null && data.valido !== \"undefined\" && data.valido === true) {\n      alert(\"Solicitud enviada\");\n    } else {\n      alert(\"No se pudo enviar la solicitud\");\n    }\n  }\n\n  eliminarContacto(event) {\n    try {\n      let email = event.target.getAttribute('data-email');\n      let respuesta = event.target.getAttribute('data-respuesta');\n      let url;\n      let metodo;\n\n      if (respuesta === 'true') {\n        metodo = 'POST';\n        url = apiPath() + '/contactos/eliminar';\n        this.eliminarCon(url, metodo, email);\n      } else {\n        return null;\n      }\n    } catch (error) {\n      alert('error');\n    }\n  }\n\n  eliminarCon(url, metodo, email) {\n    fetch(url, {\n      method: metodo,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': getToken()\n      },\n      body: JSON.stringify({\n        usuario: email\n      })\n    }).then(() => window.location.reload());\n  }\n\n  renderContador() {\n    let contactos = this.props.contactos;\n\n    if (contactos.length > 0) {\n      return contactos.length;\n    } else {\n      return 0;\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label label-primary label-sm text-normal va-middle mr-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.renderContador(), \" \"), React.createElement(\"span\", {\n      className: \"va-middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Contactos\"))), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.renderContactos())), React.createElement(\"div\", {\n      className: \"panel-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group input-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Buscar...\",\n      onChange: this.setBuscador,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"input-group-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.getPerfilSugerido.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Contactos;","map":{"version":3,"sources":["/Users/sebastian/Desktop/mapa-social-sin-claves/mapa-social/src/componentes/Contactos.js"],"names":["React","Component","getToken","apiPath","Contactos","constructor","_handleKeyDown","e","key","getPerfilSugerido","state","buscador","nuevoContacto","perfilSugerido","setBuscador","bind","enviarSolicitudContacto","event","setState","target","value","buscarContactos","contactos","bus","length","contactosFiltrados","filter","contacto","filtrarContactos","nombre","email","toLowerCase","search","renderContactos","props","recorrerContactos","c","imagen","width","margin","validarEmail","valor","re","test","String","map","eliminarContacto","url","URL","params","Object","keys","forEach","searchParams","append","dataRequest","method","headers","fetch","then","response","json","data","setPerfilSugerido","valido","body","JSON","stringify","receptor","res","comprobarSolicitud","alert","getAttribute","respuesta","metodo","eliminarCon","error","usuario","window","location","reload","renderContador","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getToken, apiPath } from './funciones';\nclass Contactos extends Component {\n    constructor() {\n        super()\n        this.state = {\n            buscador: '',\n            nuevoContacto: false,\n            perfilSugerido: []\n        };\n        this.setBuscador = this.setBuscador.bind(this);\n        this.enviarSolicitudContacto = this.enviarSolicitudContacto.bind(this)\n    }\n    setBuscador(event) {\n        this.setState({ buscador: event.target.value, nuevoContacto: false });\n    }\n    buscarContactos(contactos) {\n        let bus = this.state.buscador;\n        if (bus !== '' && contactos.length > 0) {\n            let contactosFiltrados = contactos.filter(contacto => {\n                return (this.filtrarContactos(contacto.nombre) >= 0) || (this.filtrarContactos(contacto.email) >= 0);\n            });\n            return contactosFiltrados;\n        }\n        else {\n            return contactos;\n        }\n    }\n    filtrarContactos(bus) {\n        if (typeof bus !== \"undefined\") {\n            return bus.toLowerCase().search(this.state.buscador.toLowerCase())\n        }\n        else {\n            return -1\n        }\n    }\n    renderContactos() {\n        let contactos = this.props.contactos;\n        let nuevoContacto = this.state.nuevoContacto\n        contactos = this.buscarContactos(contactos);\n        if (contactos.length > 0) {\n            return <ul className=\"simple-user-list\">\n                {this.recorrerContactos(contactos)}\n            </ul>\n        }\n        else if (nuevoContacto === true) {//nuevo contacto\n            let c = this.state.perfilSugerido;\n            return <ul className=\"simple-user-list\"><li >\n                <img src={c.imagen} alt={c.nombre} className=\"img-circle\" style={{ width: '10%', margin: '1%' }} />\n                <span className=\"title\">{c.nombre} </span>\n                <div><span className=\"Email\">{c.email} </span></div>\n                <hr className=\"dotted short\" />\n            </li>\n                <div className=\"text-right\">\n                    <a className=\"text-uppercase text-muted\" href onClick={this.enviarSolicitudContacto.bind(this)} >Agregar contacto</a>\n                </div>\n            </ul>\n        }\n        else {\n            return <div>Puedes agregar contactos buscando por correo</div>\n        }\n\n    }\n    validarEmail(valor) {\n        // eslint-disable-next-line no-useless-escape\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(valor).toLowerCase());\n    }\n    recorrerContactos(contactos) {\n        return (contactos.map(c => {\n            return (\n                <li >\n                    <img src={c.imagen} alt={c.nombre} className=\"img-circle\" style={{ width: '10%', margin: '1%' }} />\n                    <span className=\"title\">{c.nombre} </span>\n                    <div><span className=\"Email\">{c.email} </span></div>\n                    <div className=\"text-right\"><i class=\"fa fa-trash-o\" style={{ 'color': 'red' }} data-email={c.email} data-respuesta={true} onClick={this.eliminarContacto.bind(this)} >Eliminar</i></div>\n                    <hr className=\"dotted short\" />\n                </li>)\n        }))\n    }\n\n    _handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            this.getPerfilSugerido();\n        }\n    }\n    getPerfilSugerido() {\n\n        let email = this.state.buscador;\n        if (this.validarEmail(email) === true) {\n            let url = new URL(apiPath() + '/contactos/perfil-sugerido');\n            const params = { bus: email };\n            Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n            const dataRequest = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': getToken(),\n                }\n            };\n            fetch(url, dataRequest)\n                .then(response => response.json())\n                .then(data => this.setPerfilSugerido(data));\n        }\n    }\n\n    setPerfilSugerido(data) {\n        if (data !== null && data.valido !== false) {\n            this.setState({ perfilSugerido: data, nuevoContacto: true });\n        }\n    }\n    enviarSolicitudContacto() {\n        let url = apiPath() + '/contactos/solicitud';\n        let email = this.state.buscador;\n            fetch(url, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Authorization': getToken(),\n                },\n                body: JSON.stringify({ receptor: email })\n\n            })\n                .then(res => res.json())\n                .then(data => this.comprobarSolicitud(data))\n    }\n    comprobarSolicitud(data) {\n        if (data !== \"undefined\" && data !== null && data.valido !== \"undefined\" && data.valido === true) {\n            alert(\"Solicitud enviada\");\n        }\n        else {\n            alert(\"No se pudo enviar la solicitud\")\n        }\n    }\n    eliminarContacto(event) {\n        try {\n            let email = event.target.getAttribute('data-email');\n            let respuesta = event.target.getAttribute('data-respuesta');\n            let url;\n        let metodo;\n        if (respuesta === 'true') {\n            metodo = 'POST';\n            url = apiPath() + '/contactos/eliminar';\n            this.eliminarCon(url,metodo,email);\n        }\n        else{\n            return null;\n        }\n        } catch (error) {\n            alert('error')\n        }\n\n    }\n    eliminarCon(url,metodo,email){\n        fetch(url, {\n            method: metodo,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': getToken(),\n            },\n            body: JSON.stringify({ usuario: email })\n\n        })\n        .then(()=>window.location.reload())\n    }\n    renderContador() {\n        let contactos = this.props.contactos;\n        if (contactos.length > 0) {\n            return contactos.length\n        }\n        else {\n            return 0\n        }\n    }\n    render() {\n        return (\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    <div className=\"panel-actions\">\n                    </div>\n                    <h2 className=\"panel-title\">\n                        <span className=\"label label-primary label-sm text-normal va-middle mr-sm\">{this.renderContador()} </span>\n                        <span className=\"va-middle\">Contactos</span>\n                    </h2>\n                </header>\n                <div className=\"panel-body\">\n                    <div className=\"content\">\n                        {this.renderContactos()}\n                    </div>\n                </div>\n                <div className=\"panel-footer\">\n                    <div className=\"input-group input-search\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" onChange={this.setBuscador} />\n                        <span className=\"input-group-btn\">\n                            <button className=\"btn btn-default\" type=\"submit\"><i className=\"fa fa-search\" onClick={this.getPerfilSugerido.bind(this)}  ></i>\n                            </button>\n                        </span>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n\n}\nexport default Contactos;"]},"metadata":{},"sourceType":"module"}